package poly.edu.view;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import java.awt.Desktop;
import java.awt.Image;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import poly.edu.model.ChiTietSP;
import poly.edu.model.NhaCungCap;
import poly.edu.service.ChiTietSanPham_Service;

/**
 *
 * @author Yen Nhi
 */
public class ChiTietSanPham extends javax.swing.JFrame {

    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

    private final ChiTietSanPham_Service service = new ChiTietSanPham_Service();

    DefaultTableModel model = new DefaultTableModel();

    private int index = -1;

    private String str_hinhAnh = null;

    public ChiTietSanPham(java.awt.Frame parent, boolean modal) {
//        super(parent, modal);
        initComponents();
        model = (DefaultTableModel) tbl_chiTiet.getModel();
        init();
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        menuDelete = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        lbl_images = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_nhaCungCap = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jdc_ngaySX = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txt_donGia = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_chiTiet = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txt_tenSP = new javax.swing.JTextField();
        btn_first = new javax.swing.JButton();
        btn_pre = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        btn_last = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        lbl_idCTSP = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();

        jPopupMenu1.setToolTipText("");

        menuDelete.setText("Xóa");
        menuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteActionPerformed(evt);
            }
        });
        jPopupMenu1.add(menuDelete);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(61, 186, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("CHI TIẾT SẢN PHẨM");

        lbl_images.setForeground(new java.awt.Color(255, 255, 255));
        lbl_images.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lbl_images.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_imagesMouseClicked(evt);
            }
        });

        jLabel3.setText("ID_CTSP");

        jLabel4.setText("Nhà Cung Cấp");

        jLabel5.setText("Ngày Sản Xuất");

        jLabel6.setText("Đơn giá");

        jButton1.setText("Xuất file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Thêm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tbl_chiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID_CTSP", "Tên Sản Phẩm", "Nhà Cung Cấp", "Ngày Sản Xuất", "Đơn Giá", "Hình"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_chiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_chiTietMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbl_chiTietMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_chiTiet);

        jButton4.setText("Tạo QR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/edu/icons/Refresh.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel7.setText("Tên Sản Phẩm");

        btn_first.setText("<<");
        btn_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_firstActionPerformed(evt);
            }
        });

        btn_pre.setText("<");
        btn_pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_preActionPerformed(evt);
            }
        });

        btn_next.setText(">");
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        btn_last.setText(">>");
        btn_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lastActionPerformed(evt);
            }
        });

        jButton6.setText("Sửa");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setText("Nhập file");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(84, 84, 84)
                        .addComponent(btn_first)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_pre, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_last))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_images, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(3, 3, 3)
                                .addComponent(jButton8)
                                .addGap(1, 1, 1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_tenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txt_nhaCungCap, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                                                .addComponent(jdc_ngaySX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txt_donGia, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbl_idCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jButton4)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(28, 28, 28))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_first, btn_last, btn_next, btn_pre});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jButton5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lbl_idCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_tenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jdc_ngaySX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_donGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbl_images, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(btn_first)
                    .addComponent(btn_pre)
                    .addComponent(btn_next)
                    .addComponent(btn_last)
                    .addComponent(jButton6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_first, btn_last, btn_next, btn_pre});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_firstActionPerformed
        this.index = 0;
        tbl_chiTiet.setRowSelectionInterval(index, index);
        try {
            showDetail();
        } catch (ParseException ex) {
            Logger.getLogger(ChiTietSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Bạn đang ở đầu danh sách");
    }//GEN-LAST:event_btn_firstActionPerformed

    private void btn_preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_preActionPerformed
        if (index == 0) {
            index = tbl_chiTiet.getRowCount() - 1;
        } else {
            index--;
        }
        tbl_chiTiet.setRowSelectionInterval(index, index);
        try {
            showDetail();
        } catch (ParseException ex) {
            Logger.getLogger(ChiTietSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_preActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        if (index == tbl_chiTiet.getRowCount() - 1) {
            index = 0;
        } else {
            index++;
        }
        tbl_chiTiet.setRowSelectionInterval(index, index);
        try {
            showDetail();
        } catch (ParseException ex) {
            Logger.getLogger(ChiTietSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_nextActionPerformed

    private void btn_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lastActionPerformed
        index = tbl_chiTiet.getRowCount() - 1;
        tbl_chiTiet.setRowSelectionInterval(index, index);
        JOptionPane.showMessageDialog(this, "Bạn đang ở cuối danh sách");
        try {
            showDetail();
        } catch (ParseException ex) {
            Logger.getLogger(ChiTietSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_lastActionPerformed

    private void tbl_chiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_chiTietMouseClicked
        try {
            showDetail();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tbl_chiTietMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        loadDataTable();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void lbl_imagesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_imagesMouseClicked
        try {
            JFileChooser jf = new JFileChooser("D:\\DUAN_1\\SQL\\PRO1041-SD18309-GROUP6\\images");
            jf.showOpenDialog(null);
            File file = jf.getSelectedFile();
            Image img = ImageIO.read(file);
            str_hinhAnh = file.getName(); // Lấy tên file
            lbl_images.setText("");
            int width = lbl_images.getWidth();
            int height = lbl_images.getHeight();
            lbl_images.setIcon(new ImageIcon(img.getScaledInstance(width, height, 0)));
        } catch (IOException e) {
            System.out.println("Error: " + e.toString());
        }
    }//GEN-LAST:event_lbl_imagesMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        txt_tenSP.setText("");
        txt_nhaCungCap.setText("");
        txt_donGia.setText("");
        lbl_images.setText("Hình Ảnh");
        lbl_images.setIcon(null);
        str_hinhAnh = null;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            add();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            update();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tbl_chiTietMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_chiTietMouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tbl_chiTietMouseReleased

    private void menuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteActionPerformed
        try {
            delete();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_menuDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            JFileChooser excelFile = new JFileChooser("D:\\DUAN_1\\SQL\\FILE EXCEL");
            excelFile.showSaveDialog(this);
            File saveFile = excelFile.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("Sản Phẩm Chi Tiết");

                Row rowCol = sheet.createRow(0);
                for (int i = 0; i < tbl_chiTiet.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tbl_chiTiet.getColumnName(i));
                }

                for (int j = 0; j < tbl_chiTiet.getRowCount(); j++) {
                    Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < tbl_chiTiet.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tbl_chiTiet.getValueAt(j, k) != null) {
                            cell.setCellValue(tbl_chiTiet.getValueAt(j, k).toString());
                        }
                    }
                }

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Lỗi xuất file excel");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            int index = tbl_chiTiet.getSelectedRow();
            String tenSP = tbl_chiTiet.getValueAt(index, 1).toString();
            generateQRcode(tenSP, 1250, 1250, outputQR);
            JOptionPane.showMessageDialog(null, "Đã tạo QR cho sản phẩm " + tenSP + " thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bạn hãy chọn sản phẩm muốn tạo QR!");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        File excel;

        FileInputStream excelFIS = null;

        BufferedInputStream excelBIS = null;

        XSSFWorkbook excelJTableImport = null;

        JFileChooser excelFile = new JFileChooser("D:\\DUAN_1\\SQL\\FILE EXCEL");
        int excelChooser = excelFile.showOpenDialog(null);

        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excel = excelFile.getSelectedFile();
                excelFIS = new FileInputStream(excel);
                excelBIS = new BufferedInputStream(excelFIS);

                excelJTableImport = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);

                for (int row = 0; row < excelSheet.getLastRowNum(); row++) {
                    XSSFRow excelRow = excelSheet.getRow(1);

                    XSSFCell id = excelRow.getCell(0);
                    XSSFCell tenSP = excelRow.getCell(1);
                    XSSFCell tl = excelRow.getCell(2);
                    XSSFCell kt = excelRow.getCell(3);
                    XSSFCell ms = excelRow.getCell(4);
                    XSSFCell cl = excelRow.getCell(5);
                    XSSFCell donGia = excelRow.getCell(6);
                    XSSFCell slTon = excelRow.getCell(7);
                    XSSFCell tt = excelRow.getCell(8);
                    System.out.println(id);
                    System.out.println(tenSP);
                    System.out.println(tl);
                    System.out.println(kt);
                    System.out.println(ms);
                    System.out.println(cl);
                    System.out.println(donGia);
                    System.out.println(slTon);
                    System.out.println(tt);

                    model.addRow(new Object[]{id, tenSP, tl, kt, ms, cl, donGia, slTon, tt});
                }

                JOptionPane.showMessageDialog(null, "Imported Successfully");
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    public void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException e) {
            System.out.println(e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChiTietSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChiTietSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChiTietSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChiTietSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChiTietSanPham dialog = new ChiTietSanPham(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_pre;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdc_ngaySX;
    private javax.swing.JTextField lbl_idCTSP;
    private javax.swing.JLabel lbl_images;
    private javax.swing.JMenuItem menuDelete;
    private javax.swing.JTable tbl_chiTiet;
    private javax.swing.JTextField txt_donGia;
    private javax.swing.JTextField txt_nhaCungCap;
    private javax.swing.JTextField txt_tenSP;
    // End of variables declaration//GEN-END:variables

    private void init() {

        loadDataTable();

    }

    private void loadDataTable() {
        model.setRowCount(0);

        ArrayList<ChiTietSP> list = service.getAllChiTiet();

        for (ChiTietSP sp : list) {
            model.addRow(new Object[]{
                sp.getId(),
                sp.getTenSP(),
                sp.getNcc(),
                sp.getNgaySanXuat(),
                sp.getDonGia(),
                sp.getHinh()
            });
        }
    }

    private void showDetail() throws ParseException {
        int index = tbl_chiTiet.getSelectedRow();

        lbl_idCTSP.setText(tbl_chiTiet.getValueAt(index, 0).toString());
        txt_tenSP.setText(tbl_chiTiet.getValueAt(index, 1).toString());
        txt_nhaCungCap.setText(tbl_chiTiet.getValueAt(index, 2).toString());
        Date ngaySX = null;
        ngaySX = format.parse(tbl_chiTiet.getValueAt(index, 3).toString());
        jdc_ngaySX.setDate(ngaySX);
        txt_donGia.setText(tbl_chiTiet.getValueAt(index, 4).toString());

        ChiTietSP sv = service.getAllChiTiet().get(index);
        if (sv.getHinh().equalsIgnoreCase("Không có hình ảnh!")) {
            lbl_images.setText("Không có hình ảnh!");
            lbl_images.setIcon(null);
        } else {
            lbl_images.setText("");
            ImageIcon icon1 = new ImageIcon("images\\" + sv.getHinh());
            Image im = icon1.getImage();
            ImageIcon icon = new ImageIcon(im.getScaledInstance(lbl_images.getWidth(), lbl_images.getHeight(), im.SCALE_SMOOTH));
            lbl_images.setIcon(icon);
        }
    }

    private ChiTietSP getForm() throws ParseException {
        ChiTietSP sp = new ChiTietSP();
        sp.setId(Integer.parseInt(lbl_idCTSP.getText()));
        sp.setTenSP(txt_tenSP.getText());
        NhaCungCap ncc = new NhaCungCap();
        ncc.setTenNCC(txt_nhaCungCap.getText());
        sp.setNcc(ncc);
        Date da = jdc_ngaySX.getDate();
        String date = format.format(da);
        sp.setNgaySanXuat(format.parse(date));
        sp.setDonGia(BigDecimal.valueOf(Double.parseDouble(txt_donGia.getText())));
        if (str_hinhAnh == null) {
            sp.setHinh("Không có hình ảnh!");
        } else {
            sp.setHinh(str_hinhAnh);
        }
        return sp;
    }

    public boolean validates() {

        if (txt_tenSP.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên sản phẩm");
            txt_tenSP.requestFocus();
            return false;
        } else {
            if (txt_tenSP.getText().trim().matches("[0-9 ]+")) {
                JOptionPane.showMessageDialog(this, "Tên sai định dạng");
                txt_tenSP.requestFocus();
                return false;
            }
        }

        if (txt_nhaCungCap.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên nhà cung cấp");
            txt_nhaCungCap.requestFocus();
            return false;
        } else {
            if (txt_nhaCungCap.getText().trim().matches("[0-9 ]+")) {
                JOptionPane.showMessageDialog(this, "Tên sai định dạng");
                txt_nhaCungCap.requestFocus();
                return false;
            }
        }

        if (txt_donGia.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập đơn giá");
            txt_donGia.requestFocus();
            return false;
        }

        return true;
    }

    private void add() {
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm không?");
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            }
            if (validates()) {
                ChiTietSP nh = getForm();
                if (service.add(nh) != null) {
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    loadDataTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Lỗi nút add");
        }
    }

    private void update() {
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn Cập nhật không?");
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            }
            if (validates()) {
                ChiTietSP nh = getForm();
                int index = tbl_chiTiet.getSelectedRow();
                if (service.update(nh) != null && index >= 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                    loadDataTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Cập nhật thất bại");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi nút update");
        }
    }

    private void delete() {
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?");
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            }
            if (validates()) {
                ChiTietSP sp = getForm();
                int index = tbl_chiTiet.getSelectedRow();
                int masp = Integer.parseInt(lbl_idCTSP.getText());
                if (service.delete(index, masp) != null && index >= 0) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                    loadDataTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa thất bại");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi nút delete");
        }
    }

    private static final String outputQR = "D:\\DUAN_1\\QR\\outputSP.png";

    private static void generateQRcode(String text, int width, int height, String filePath) throws WriterException {
        QRCodeWriter qc = new QRCodeWriter();
        BitMatrix bm = qc.encode(text, BarcodeFormat.QR_CODE, width, height);
        Path pobj = FileSystems.getDefault().getPath(filePath);
        try {
            MatrixToImageWriter.writeToPath(bm, "PNG", pobj);
        } catch (IOException ex) {
            Logger.getLogger(Products_Panel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
