/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.edu.view;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import poly.edu.service.DotGiamGiaDAO;

/**
 *
 * @author ADMIN
 */
public class DotGiamGia extends javax.swing.JPanel {

    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    DefaultTableModel model = new DefaultTableModel();
    private final DotGiamGiaDAO dao = new DotGiamGiaDAO();
    public DotGiamGia() {
        initComponents();
        model = (DefaultTableModel) tbl_dotgiamgia.getModel();
        loadDataTable();
        if (tbl_dotgiamgia.getRowCount() > 0) {
            tbl_dotgiamgia.setRowSelectionInterval(0, 0);
            showDetail();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_tim = new javax.swing.JTextField();
        btn_tim = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_ma = new javax.swing.JTextField();
        txt_ten = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_nbd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_nkt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_lgg = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_gtgg = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_dkgg = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_mota = new javax.swing.JTextField();
        btn_add = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_dotgiamgia = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Đợt Giảm Giá"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm đợt giảm giá"));

        btn_tim.setText("Tìm kiếm");
        btn_tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(txt_tim, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(btn_tim)
                .addGap(49, 49, 49))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_tim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_tim))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel1.setText("ID_DGG");

        jLabel2.setText("TenDGG");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_ma)
                            .addComponent(txt_ten, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_ma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_ten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Đợt Giảm Giá Chi Tiết"));

        jLabel3.setText("NgayBatDau");

        jLabel4.setText("NgayKetThuc");

        jLabel5.setText("LoaiGiamGia");

        jLabel6.setText("GiaTriGG");

        jLabel7.setText("DieuKienGiamGia");

        jLabel8.setText("MoTa");

        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_nbd)
                            .addComponent(txt_nkt)
                            .addComponent(txt_lgg)
                            .addComponent(txt_gtgg)
                            .addComponent(txt_dkgg)
                            .addComponent(txt_mota, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_add)
                            .addComponent(btn_delete))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_clear)
                            .addComponent(btn_update))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(txt_nbd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(txt_nkt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(txt_lgg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(txt_gtgg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(txt_dkgg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(txt_mota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add)
                    .addComponent(btn_update))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_delete)
                    .addComponent(btn_clear))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        tbl_dotgiamgia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID_DGG", "TenDGG", "NgayBatDau", "NgayKetThuc", "LoaiGiamGia", "GIaTriGG", "DieuKienGiamGia", "MoTa"
            }
        ));
        tbl_dotgiamgia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_dotgiamgiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_dotgiamgia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(27, 27, 27)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_timActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timActionPerformed
        model = (DefaultTableModel) tbl_dotgiamgia.getModel();
        model.setRowCount(0);
        int maDGG = Integer.parseInt(txt_tim.getText());
        for (poly.edu.model.DotGiamGia dgg : dao.getMaDGG(maDGG)) {
            model.addRow(new Object[]{
                dgg.getID_DGG(),
                dgg.getTenDGG(),
                dgg.getNgayBatDau(),
                dgg.getNgayKetThuc(),
                dgg.getLoaiGiamGia(),
                dgg.getGiaTriGG(),
                dgg.getDieuKienGiamGia(),
                dgg.getMoTa()
            });
        }      
    }//GEN-LAST:event_btn_timActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        try {
            add();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        try {
            update();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        try {
            delete();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        try {
            clear();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_clearActionPerformed

    private void tbl_dotgiamgiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_dotgiamgiaMouseClicked
        try {
            showDetail();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_tbl_dotgiamgiaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_tim;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_dotgiamgia;
    private javax.swing.JTextField txt_dkgg;
    private javax.swing.JTextField txt_gtgg;
    private javax.swing.JTextField txt_lgg;
    private javax.swing.JTextField txt_ma;
    private javax.swing.JTextField txt_mota;
    private javax.swing.JTextField txt_nbd;
    private javax.swing.JTextField txt_nkt;
    private javax.swing.JTextField txt_ten;
    private javax.swing.JTextField txt_tim;
    // End of variables declaration//GEN-END:variables

    private void loadDataTable() {
        model.setRowCount(0);
        ArrayList<poly.edu.model.DotGiamGia> listdgg = dao.getAllDotGiamGia();
        for (poly.edu.model.DotGiamGia dgg : listdgg) {
            model.addRow(new Object[]{
                dgg.getID_DGG(),
                dgg.getTenDGG(),
                dgg.getNgayBatDau(),
                dgg.getNgayKetThuc(),
                dgg.getLoaiGiamGia(),
                dgg.getGiaTriGG(),
                dgg.getDieuKienGiamGia(),
                dgg.getMoTa()
            });
        }
    }
    
    private void showDetail() {
        int index = tbl_dotgiamgia.getSelectedRow();
        txt_ma.setText(tbl_dotgiamgia.getValueAt(index, 0).toString());
        txt_ten.setText(tbl_dotgiamgia.getValueAt(index, 1).toString());
        txt_nbd.setText(tbl_dotgiamgia.getValueAt(index, 2).toString());
        txt_nkt.setText(tbl_dotgiamgia.getValueAt(index, 3).toString());
        txt_lgg.setText(tbl_dotgiamgia.getValueAt(index, 4).toString());
        txt_gtgg.setText(tbl_dotgiamgia.getValueAt(index, 5).toString());
        txt_dkgg.setText(tbl_dotgiamgia.getValueAt(index, 6).toString());
        txt_mota.setText(tbl_dotgiamgia.getValueAt(index, 7).toString());
        
    }
    public boolean validates() {
        if (txt_ten.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên đợt gảim giá không được để trống");
            txt_ten.requestFocus();
            return false;
        }

        if (txt_nbd.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu không được để trống");
            txt_nbd.requestFocus();
            return false;
        }
        
        if (txt_nkt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày kết thúc không được để trống");
            txt_nkt.requestFocus();
            return false;
        }
        
        if (txt_lgg.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Loại giảm giá không được để trống");
            txt_lgg.requestFocus();
            return false;
        }
        
        if (txt_gtgg.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá trị gảim giá không được để trống");
            txt_gtgg.requestFocus();
            return false;
        }
        
        if (txt_dkgg.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Điều kiện gảim giá không được để trống");
            txt_dkgg.requestFocus();
            return false;
        }
        
        if (txt_mota.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mô tả không được để trống");
            txt_mota.requestFocus();
            return false;
        }
        
        if (txt_ten.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên đợt gảim giá không được để trống");
            txt_ten.requestFocus();
            return false;
        }
        
        if (txt_ten.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên đợt gảim giá không được để trống");
            txt_ten.requestFocus();
            return false;
        }
        
        
        return true;
    }
    
    private void delete() throws ParseException {
        poly.edu.model.DotGiamGia dgg = getForm();
        int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa?");
        if (hoi != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            int index = tbl_dotgiamgia.getSelectedRow();
            int maDGG = Integer.parseInt(txt_ma.getText());
            if (dao.delete(index, maDGG) != null) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                loadDataTable();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");                
            }
        } catch (Exception e) {
        }
    }
    
    private void add() {
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm không?");
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            }
            if (validates()) {
                poly.edu.model.DotGiamGia dgg = getForm();
                if (dao.add(dgg) != null) {
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    loadDataTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Lỗi nút add");
        }
    }

    private void update() {
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn Cập nhật không?");
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            }
            if (validates()) {
                poly.edu.model.DotGiamGia dgg = getForm();
                int index = tbl_dotgiamgia.getSelectedRow();
                if (dao.update(dgg) != null && index >= 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                    loadDataTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Cập nhật thất bại");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi nút update");
        }
    }


    private poly.edu.model.DotGiamGia getForm() throws ParseException {
        poly.edu.model.DotGiamGia dgg = new poly.edu.model.DotGiamGia();
        dgg.setID_DGG(Integer.parseInt(txt_ma.getText()));
        dgg.setTenDGG(txt_ten.getText());
        dgg.setNgayBatDau(format.parse(txt_nbd.getText()));
        dgg.setNgayKetThuc(format.parse(txt_nkt.getText()));
        dgg.setLoaiGiamGia(txt_lgg.getText());
        dgg.setGiaTriGG(txt_gtgg.getText());
        dgg.setDieuKienGiamGia(txt_dkgg.getText());
        dgg.setMoTa(txt_mota.getText());
        
        return dgg;
    }

    private void clear() {
         txt_dkgg.setText("");
         txt_gtgg.setText("");
         txt_lgg.setText("");
         txt_ma.setText("");
         txt_mota.setText("");
         txt_nbd.setText("");
         txt_nkt.setText("");
         txt_ten.setText("");
    }
    
}
